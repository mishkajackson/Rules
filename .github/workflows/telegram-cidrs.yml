name: Build Telegram CIDR lists

on:
schedule:
# 00:00 UTC ≈ 03:00 по Хельсинки летом (02:00 зимой)
- cron: “0 0 * * *”
workflow_dispatch: {}

permissions:
contents: write  # Явно указываем права на запись

jobs:
build:
runs-on: ubuntu-latest
steps:
- name: Checkout
uses: actions/checkout@v4
with:
# Используем токен с правами на запись
token: ${{ secrets.GITHUB_TOKEN }}

```
  - name: Debug - Check connectivity
    run: |
      echo "Testing connection to Telegram CIDR endpoint..."
      curl -I https://core.telegram.org/resources/cidr.txt || echo "Connection failed"

  - name: Generate Clash & Shadowrocket lists
    shell: bash
    run: |
      mkdir -p Shadowrocket Clash/IPs

      python3 - <<'PY'
```

import urllib.request
from pathlib import Path
import sys

URL = “https://core.telegram.org/resources/cidr.txt”

try:
print(f”Fetching data from {URL}”)
with urllib.request.urlopen(URL, timeout=30) as r:
text = r.read().decode(“utf-8”)
print(f”Successfully fetched {len(text)} characters”)

```
source = [line.strip() for line in text.splitlines() if line.strip()]
print(f"Found {len(source)} CIDR entries")

# Показываем первые несколько записей для диагностики
print("First 5 entries:", source[:5])

# --- Clash/IPs/Telegram.yaml ---
yaml_path = Path("Clash/IPs/Telegram.yaml")
yaml_path.parent.mkdir(parents=True, exist_ok=True)
with yaml_path.open("w", encoding="utf-8") as f:
    f.write("payload:\n")
    for cidr in source:
        f.write(f"  - {cidr}\n")

# --- Shadowrocket/Telegram.list ---
ipv4_final_order = [
    "109.239.140.0/24",
    "149.154.160.0/20",
    "5.28.192.0/18",
    "91.108.0.0/16",
]

have_f23c = any(s.lower().startswith("2001:b28:f23c::/48") for s in source)
have_f23d = any(s.lower().startswith("2001:b28:f23d::/48") for s in source)

ipv6_agg = []
if have_f23c and have_f23d:
    ipv6_agg.append("2001:b28:f23c::/47")
else:
    if have_f23c: ipv6_agg.append("2001:b28:f23c::/48")
    if have_f23d: ipv6_agg.append("2001:b28:f23d::/48")

ipv6_ordered = ["2001:67c:4e8::/48", *ipv6_agg, "2001:b28:f23f::/48", "2a0a:f280::/29"]

list_path = Path("Shadowrocket/Telegram.list")
list_path.parent.mkdir(parents=True, exist_ok=True)
with list_path.open("w", encoding="utf-8") as f:
    for cidr in ipv4_final_order:
        f.write(f"IP-CIDR,{cidr},no-resolve\n")
    for cidr in ipv6_ordered:
        f.write(f"IP-CIDR6,{cidr},no-resolve\n")

print("Generated:")
print(" -", yaml_path)
print(" -", list_path)

# Показываем размеры созданных файлов
print(f"YAML file size: {yaml_path.stat().st_size} bytes")
print(f"List file size: {list_path.stat().st_size} bytes")
```

except Exception as e:
print(f”Error: {e}”, file=sys.stderr)
sys.exit(1)
PY

```
  - name: Debug - Show git status
    run: |
      echo "Git status:"
      git status --porcelain
      echo "Files in working directory:"
      find . -name "*.yaml" -o -name "*.list" | head -10

  - name: Commit and push if changed
    run: |
      set -e
      
      # Проверяем, есть ли изменения
      if [ -n "$(git status --porcelain)" ]; then
        echo "Changes detected, committing..."
        
        # Настраиваем git
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Добавляем файлы
        git add Clash/IPs/Telegram.yaml Shadowrocket/Telegram.list
        
        # Показываем что будем коммитить
        echo "Files to be committed:"
        git diff --cached --name-only
        
        # Коммитим
        git commit -m "Update Telegram CIDR lists - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
        
        # Пушим
        echo "Pushing changes..."
        git push
        echo "Successfully pushed changes"
      else
        echo "No changes to commit."
      fi